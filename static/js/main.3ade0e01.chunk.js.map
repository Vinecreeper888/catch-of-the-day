{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","handleSubmit","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","_ref","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFish","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","authentiate","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","notFound","Router","BrowserRouter","Switch","Route","exact","path","NotFound","render","components_Router","document","getElementById"],"mappings":"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","file":"static/js/main.3ade0e01.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\" \n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport {getFunName} from '../helpers';\nimport PropTypes from 'prop-types';\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object\n    }\n    myInput = React.createRef();\n\n    // handleSubmit is a property here just like myInput\n    // set it to an arrow function that allows us to bind\n\n    handleSubmit = event => {\n        event.preventDefault();\n        //console.log(this.myInput.value.value);\n        const storeName = this.myInput.current.value;\n        this.props.history.push(`/store/${storeName}`);\n    };\n    render() {\n        return(\n            <form className=\"store-selector\" onSubmit={this.handleSubmit}>\n                <h2>Please enter A Store</h2>\n                <input \n                    type=\"text\" \n                    ref={this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue={getFunName()}\n                />\n                <button type=\"submit\">\n                    Visit Store!\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({tagline}) => (\n    <header className=\"top\">\n        <h1>Catch\n        <span className=\"ofThe\">\n            <span className=\"of\">Of</span>\n            <span className=\"the\">The</span>\n        </span>\n        Day</h1>\n        <h3 className=\"tagline\">\n            <span>{tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport {formatPrice} from '../helpers';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: {enter: 500, exit: 500}\n        }\n\n        if(!fish) return null;\n\n        if(!isAvailable) {\n            return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    Sorry {fish ? fish.name : 'fish'} is no longer available\n                </li>\n            </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                    <TransitionGroup component=\"span\" className=\"count\">\n                    <CSSTransition classNames=\"count\" key={count} timeout={{enter: 500, exit: 500}}>\n                        <span>{count}</span>\n                        </CSSTransition> \n                    </TransitionGroup>\n                    lbs {fish.name}\n                    {formatPrice(count*fish.price)}\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal,key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count*fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    {formatPrice(total)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass AddFish extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n\n    createFish = event => {\n        event.preventDefault();\n        const fish = {\n           name: this.nameRef.current.value,\n           price: parseFloat(this.priceRef.current.value),\n           status: this.statusRef.current.value,\n           desc: this.descRef.current.value,\n           image: this.imageRef.current.value, \n        }\n        this.props.addFish(fish);\n        //resfresh the form\n        event.currentTarget.reset();\n    }\n\n    render() {\n        return(\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n               <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\n               <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n               <select name=\"status\" ref={this.statusRef}>\n                 <option value=\"available\">Fresh!</option>\n                   <option value=\"unavailable\">Sold Out!</option>\n               </select>\n               <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n               <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\n               <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFish;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            status: PropTypes.string,\n            desc: PropTypes.string,\n            price: PropTypes.number\n        }), \n        updateFish: PropTypes.func,\n        index: PropTypes.string\n    }\n\n    handleChange = (event) => {\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index,updatedFish)\n    }\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\"\n                    name=\"name\"  \n                    value={this.props.fish.name} \n                    onChange={this.handleChange}    \n                />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    value={this.props.fish.price}\n                    onChange={this.handleChange}\n                />\n                <select \n                    type=\"text\"\n                    name=\"status\"\n                    value={this.props.fish.status}\n                    onChange={this.handleChange}\n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea\n                    type=\"text\" \n                    name=\"desc\" \n                    value={this.props.fish.desc}\n                    onChange={this.handleChange}\n                >\n                </textarea>\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    value={this.props.fish.image}\n                    onChange={this.handleChange}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        )\n    }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n            Login with Github\n        </button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n            Login with Twitter\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n            Login with Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base'; //react- firebase to mirror states\nimport firebase from 'firebase';\n\n//configure\nconst firebaseApp = firebase.initializeApp(\n    {\n        apiKey: \"AIzaSyCyHAWsPRAVAl08_c4yRdyj6sMC3BP5Wfc\",\n        authDomain: \"catch-of-the-day-sid-7717a.firebaseapp.com\",\n        databaseURL: \"https://catch-of-the-day-sid-7717a-default-rtdb.firebaseio.com\",\n    }\n);\n\n//create rebase\nconst base = Rebase.createClass(firebaseApp.database());\n\n//named export\nexport {firebaseApp}\n\n//default export\nexport default base;","import React from 'react';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport firebase from 'firebase';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component{\n    static propTypes = {\n        fishes: PropTypes.object,\n        updatedFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({user});\n            }\n        }) \n    }\n\n    authHandler = async authData => {\n        //look up the current store in firebase\n        const store = await base.fetch(this.props.storeId, {context: this});\n        console.log(store);\n        //claim it if thers no owner\n        if(!store.owner) {\n            //save it as our own\n            await base.post(`${this.props.storeId}/owner`,{\n                data: authData.user.uid\n            })\n        }\n        //set the stat of the inventory comp to reflect\n        //the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n        \n    }\n    authentiate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('Logging out!');\n        await firebase.auth().signOut();\n        this.setState({uid: null})\n\n    };\n\n    render() {\n\n        const logout = <button onClick={this.logout}>Log Out</button>\n\n        //check if they're logged in\n        if(!this.state.uid) {\n            return <Login authenticate={this.authentiate}/>\n        }\n        //check if they're not the owner\n        if(this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry, you are not the owner</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        //they must be the owner\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm \n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {formatPrice} from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            price: PropTypes.number,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n        }),\n        addToOrder: PropTypes.func\n    }\n    handleClick = () => {\n        this.props.addToOrder(this.props.index)\n    }\n    render() {\n        const {image,name,price,desc,status} = this.props.details;\n        const isAvailable = status === 'available';\n        return(\n            <li className=\"menu-fish\">\n                <img src={image} alt={name}/>\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Order' : 'Sold Out!'}</button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    };\n\n    componentDidMount() {\n        const{ params} = this.props.match;\n\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef) {\n            this.setState({order: JSON.parse(localStorageRef) })\n        }\n        //refs in firebase are a reference to\n        //a piece of data in the db\n        this.ref = base.syncState(`${params.storeId}/fishes`,{\n            context: this,\n            state: 'fishes'\n        });\n    }\n    \n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    //to avoid memory leaks\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = (fish) => {\n        const fishes = {...this.state.fishes}\n        fishes[`fish${Date.now()}`] = fish;\n        this.setState({\n            fishes\n        });\n    };\n\n    updateFish = (key, updatedFish) => {\n        //take a copy of current state\n        const fishes = {...this.state.fishes};\n        //update that state\n        fishes[key] = updatedFish;\n        //set that to state\n        this.setState({fishes: fishes});\n    };\n\n    deleteFish = (key) => {\n        const fishes = {...this.state.fishes};\n        fishes[key] = null;\n        this.setState({fishes});\n    }\n\n    loadSampleFishes = () => {\n        this.setState({\n            fishes: sampleFishes\n        })\n    }\n\n    addToOrder = (key) => {\n        //copy of state\n        //either add to the order or update number\n        //call setState to update state object\n        const order = {...this.state.order};\n        order[key] = order[key] + 1 || 1;\n        this.setState({order})\n    }\n\n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({order});\n    }\n\n    render() {\n        return(\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish \n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}      \n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst notFound = () => (\n    <div>\n        <h2>Not Found!</h2>\n    </div>\n);\n\nexport default notFound;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker}></Route>\n            <Route path=\"/store/:storeId\" component={App}/>\n            <Route component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport {render} from 'react-dom';\nimport Router from './components/Router';\nimport  './css/style.css';\n\n\nrender(<Router/>, document.getElementById(\"main\"));\n\n"],"sourceRoot":""}